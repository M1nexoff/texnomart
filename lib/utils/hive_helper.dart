import 'package:hive_flutter/adapters.dart';import '../data/model/data/special_product_item_data.dart';class HiveHelper {  static Future<void> init() async {    await Hive.initFlutter();    Hive.registerAdapter(SpecialItemDataAdapter());    await Hive.openBox('basket');    await Hive.openBox('favourites');  }  static Future<bool> addProductToBasket(String key, SpecialItemData product) async {    var box = Hive.box('basket');    bool isAdded = false;    // Check if the key already exists in the box    if (!box.containsKey(key)) {      // Key does not exist, add the product to the box      box.put(key, product);      isAdded = true;    }    return isAdded;  }  static Future<bool> isAddedToBasket(String key) async {    var box = Hive.box('basket');    bool isAdded = false;    // Check if the key already exists in the box    if (!box.containsKey(key)) {      // Key does not exist, add the product to the box      isAdded = true;    }    return isAdded;  }  static Future<bool> isAddedToFavourite(String key) async {    var box = Hive.box('favourites');    bool isAdded = false;    // Check if the key already exists in the box    if (!box.containsKey(key)) {      // Key does not exist, add the product to the box      isAdded = true;    }    return isAdded;  }  static Future<void> deleteProducts(SpecialItemData productData) async {    var box = Hive.box('basket');    int indexToDelete = -1;    for (int i = 0; i < box.length; i++) {      SpecialItemData productInBasket = box.getAt(i);      if (productInBasket.name == productData.name) {        indexToDelete = i;        break;      }    }    if (indexToDelete != -1) {      await box.deleteAt(indexToDelete);    }  }  static Future<void> deleteFavouriteById(String id) async {    final box = Hive.box('favourites');    await box.delete(id);  }  static Future<void> deleteBasketItemById(String id) async {    final box = Hive.box('basket');    await box.delete(id);  }  static List<SpecialItemData> getAllFavourites() {    final box = Hive.box('favourites');    return box.values.cast<SpecialItemData>().toList();  }  static Future<bool> addProductToFavourite(      SpecialItemData productHolder) async {    var box = Hive.box('favourites');    bool isAdded = false;    var newdata = SpecialItemData(image: productHolder.image,        name: productHolder.name,        count: '1',        axiomMonthlyPrice: productHolder.axiomMonthlyPrice,        salePrice: productHolder.salePrice,        id: productHolder.id);    // Check if the key already exists in the box    if (!box.containsKey(newdata.id)) {      // Key does not exist, add the product to the box      box.put(newdata.id, newdata);      isAdded = true;    }    return isAdded;  }  static List<SpecialItemData> getAllProducts() {    if (!Hive.isBoxOpen('basket')) {      Hive.openBox('basket');    }    final box = Hive.box('basket');    return box.values.cast<SpecialItemData>().toList();  }  static Future<void> deleteBasket() {    final box = Hive.box('basket');    return box.clear();  }}