import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:iconsax/iconsax.dart';import '../../data/model/data/special_product_item_data.dart';import '../../presentation/favourite/favourite_bloc.dart';import '../../presentation/theme/light_colors.dart';import '../../presentation/theme/ui_components.dart';import '../basket_screen/basket.dart';import 'favourite_item.dart';class FavouritePage extends StatefulWidget {  const FavouritePage({Key? key}) : super(key: key);  @override  State<FavouritePage> createState() => _FavouritePageState();}class _FavouritePageState extends State<FavouritePage> {  final _bloc = FavouriteBloc();  List<SpecialItemData> data = [];  @override  void initState() {    _bloc.add(GetAllFavouriteEvent());    super.initState();  }  // double calculateTotalSum(List<SpecialItemData> products) {  //   double totalSum = 0;  //   for (var product in products) {  //     totalSum += (double.tryParse(product.value) ?? 0) * (double.tryParse(product.price) ?? 0);  //   }  //   return totalSum;  // }  @override  Widget build(BuildContext context) {    return BlocProvider.value(      value: _bloc,      child: BlocConsumer<FavouriteBloc, FavouriteState>(        listener: (context, state) {          if (state is GetAllProductsFromFavouriteState) {            setState(() {              data = List.from(state.data);            });          }        },        builder: (context, state) {          return Scaffold(            backgroundColor: Colors.white,            appBar: AppBar(              backgroundColor: const Color(0xFFF8BF1C),              leading: IconButton(                onPressed: () {                  Navigator.pop(context);                },                icon: const Icon(Icons.arrow_back_rounded),              ),              title: const Text('Favourites'),            ),            body: SafeArea(              child: Column(                children: [                  Expanded(                    child: Padding(                      padding: const EdgeInsets.all(10),                      child: Builder(                        builder: (context) {                          if (state is GetAllProductsFromFavouriteState) {                            return state.data.isNotEmpty ? ListView.separated(                              itemCount: data.length,                              itemBuilder: (context, index) {                                return FavouriteItem(                                  product: data[index],                                  onDelete: () {                                    // Удаление продукта из корзины                                    _bloc.add(DeleteProductFromFavouriteEvent(                                        product: data[index]));                                  },                                );                              }, separatorBuilder: (BuildContext context, int index) {                                return _buildCustomThicknessDivider();                            },                            ) :  const Column(                              mainAxisAlignment: MainAxisAlignment.center,                              children: [                                Icon(Iconsax.favorite_chart, size: 56,),                                SizedBox(height: 24,),                                BoldText(text: "Sevimlilar ro'yhati bo'sh", fontSize: 20,),                                SizedBox(height: 16,),                                Padding(                                  padding: EdgeInsets.symmetric(horizontal: 28.0),                                  child: Text("Sevimli mahsulotlaringizni keyinroq ko'rish yoki sotib olish uchun ularni sevimlilarga qo'shing", style:TextStyle(fontFamily: 'PaynetB',fontSize: 16,fontWeight: FontWeight.w400), textAlign: TextAlign.center,),                                ),                              ],                            );                          } else {                            return const Center(                              child: CircularProgressIndicator(),                            );                          }                        },                      ),                    ),                  ),                ],              ),            ),          );        },      ),    );  }  Widget _buildCustomThicknessDivider() {    return Padding(      padding: const EdgeInsets.symmetric(horizontal: 16.0),      child: Container(        height: 1,        color: LightColors.primary2,      ),    );  }}